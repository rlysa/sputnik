#!/bin/python3


import RPi.GPIO as GPIO
import picamera
from time import sleep
import datetime
import base64
import socket
import schedule


SERVER_MAC_ADDRESS = 'B8:27:EB:BC:FC:E9'
PORT = 11
PATH = '/home/pi/image.jpg'


def take_photo(camera):
    camera.capture(PATH)


def connection():
    s = socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM)
    s.connect((SERVER_MAC_ADDRESS, PORT))
    return s


def encode():
    with open(PATH, 'rb') as binary_file:
        binary_file_data = binary_file.read()
        encoded_file = base64.b64encode(binary_file_data)
    return encoded_file


def send_file(camera, s):
    take_photo(camera)
    encoded_file = encode()
    print(encoded_file[-2:])
    s.send(encoded_file)
    s.send(b'END_FILE')
    print('photo sended')

    s.close()


try:
    s = connection()
    camera = picamera.PiCamera()
    # send_file(camera, s)
    schedule.every(60).seconds.do(lambda: send_file(camera, s))
    while 1:
        schedule.run_pending()

finally:
    camera.close()
    GPIO.cleanup()
